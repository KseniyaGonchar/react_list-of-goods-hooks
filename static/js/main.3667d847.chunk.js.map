{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","goods","visibleGoods","reverse","sort","g1","g2","LENGTH","length","ALPHABET","localeCompare","getReorderedGoods","className","type","classNames","onClick","current","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA6CE,IAAME,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAkBMC,EAtDD,SACLA,EADK,GAGJ,IADCF,EACF,EADEA,SAAUH,EACZ,EADYA,WAENM,EAAY,YAAOD,GA2BzB,OAzBIL,GACFM,EAAaC,UAGfD,EAAaE,MAAK,SAACC,EAAYC,GAC7B,OAAQP,GACN,KAAKP,EAASe,OACZ,OAAIX,EACKU,EAAGE,OAASH,EAAGG,OAGjBH,EAAGG,OAASF,EAAGE,OAExB,KAAKhB,EAASiB,SACZ,OAAIb,EACKU,EAAGI,cAAcL,GAGnBA,EAAGK,cAAcJ,GAE1B,QACE,OAAO,MAINJ,EAuBOS,CAAkBlB,EAAiB,CAAEM,WAAUH,eAE7D,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYf,IAAaP,EAASiB,WAEtCM,QA3BmB,WACzBf,EAAYR,EAASiB,WAoBjB,iCAWA,wBACEI,KAAK,SACLE,QA9BW,WACjBf,EAAYR,EAASe,SA8BfK,UAAWE,IACT,oBACA,CAAE,WAAYf,IAAaP,EAASe,SALxC,4BAWA,wBACEQ,QApCY,kBAClBlB,GAAc,SAAAmB,GAAO,OAAKA,MAoCpBH,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAalB,IALnB,sBAYGA,GAAcG,IAAaP,EAASM,OACnC,wBACEiB,QA9CU,WACpBf,EAAYR,EAASM,MACrBD,GAAc,IA6CJgB,KAAK,SACLD,UAAU,4BAHZ,sBAWN,6BACE,6BACGX,EAAMgB,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,cCvInBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3667d847.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  visibleGoods.sort((g1: string, g2: string) => {\n    switch (sortType) {\n      case SortType.LENGTH:\n        if (isReversed) {\n          return g2.length - g1.length;\n        }\n\n        return g1.length - g2.length;\n\n      case SortType.ALPHABET:\n        if (isReversed) {\n          return g2.localeCompare(g1);\n        }\n\n        return g1.localeCompare(g2);\n\n      default:\n        return 0;\n    }\n  });\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const sortAlphabetically = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const sortLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const sortReverse = () => (\n    setIsReversed(current => !current));\n\n  const handlertReset = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  const goods = getReorderedGoods(goodsFromServer, { sortType, isReversed });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={sortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={sortLength}\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={sortReverse}\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n        >\n          Reverse\n        </button>\n\n        {\n          (isReversed || sortType !== SortType.NONE) && (\n            <button\n              onClick={handlertReset}\n              type=\"button\"\n              className=\"button is-danger is-light\"\n            >\n              Reset\n            </button>\n          )\n        }\n      </div>\n\n      <ul>\n        <ul>\n          {goods.map(good => (\n            <li\n              key={good}\n              data-cy=\"Good\"\n            >\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}